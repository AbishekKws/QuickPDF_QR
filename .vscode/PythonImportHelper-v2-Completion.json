[
    {
        "label": "Flask",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "render_template",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "send_from_directory",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "url_for",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "qrcode",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "qrcode",
        "description": "qrcode",
        "detail": "qrcode",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "ZipFile",
        "importPath": "zipfile",
        "description": "zipfile",
        "isExtraImport": true,
        "detail": "zipfile",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def index():\n    if request.method == \"POST\":\n        files = request.files.getlist(\"pdf_files\")\n        if files:\n            uploaded_files = []\n            zip_name = str(uuid.uuid4()) + \".zip\"\n            zip_path = os.path.join(ZIP_FOLDER, zip_name)\n            with ZipFile(zip_path, 'w') as zipf:\n                for file in files:\n                    if file.filename.endswith(\".pdf\"):",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "download_zip",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def download_zip(filename):\n    return send_from_directory(ZIP_FOLDER, filename)\n@app.route(\"/uploads/<filename>\")\ndef download_pdf(filename):\n    return send_from_directory(UPLOAD_FOLDER, filename)\nif __name__ == \"__main__\":\n    app.run(debug=True)",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "download_pdf",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def download_pdf(filename):\n    return send_from_directory(UPLOAD_FOLDER, filename)\nif __name__ == \"__main__\":\n    app.run(debug=True)",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "app = Flask(__name__)\nUPLOAD_FOLDER = \"uploads\"\nQR_FOLDER = \"static/qr_codes\"\nZIP_FOLDER = \"uploads/zips\"\nos.makedirs(UPLOAD_FOLDER, exist_ok=True)\nos.makedirs(QR_FOLDER, exist_ok=True)\nos.makedirs(ZIP_FOLDER, exist_ok=True)\n@app.route(\"/\", methods=[\"GET\", \"POST\"])\ndef index():\n    if request.method == \"POST\":",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "UPLOAD_FOLDER",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "UPLOAD_FOLDER = \"uploads\"\nQR_FOLDER = \"static/qr_codes\"\nZIP_FOLDER = \"uploads/zips\"\nos.makedirs(UPLOAD_FOLDER, exist_ok=True)\nos.makedirs(QR_FOLDER, exist_ok=True)\nos.makedirs(ZIP_FOLDER, exist_ok=True)\n@app.route(\"/\", methods=[\"GET\", \"POST\"])\ndef index():\n    if request.method == \"POST\":\n        files = request.files.getlist(\"pdf_files\")",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "QR_FOLDER",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "QR_FOLDER = \"static/qr_codes\"\nZIP_FOLDER = \"uploads/zips\"\nos.makedirs(UPLOAD_FOLDER, exist_ok=True)\nos.makedirs(QR_FOLDER, exist_ok=True)\nos.makedirs(ZIP_FOLDER, exist_ok=True)\n@app.route(\"/\", methods=[\"GET\", \"POST\"])\ndef index():\n    if request.method == \"POST\":\n        files = request.files.getlist(\"pdf_files\")\n        if files:",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "ZIP_FOLDER",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "ZIP_FOLDER = \"uploads/zips\"\nos.makedirs(UPLOAD_FOLDER, exist_ok=True)\nos.makedirs(QR_FOLDER, exist_ok=True)\nos.makedirs(ZIP_FOLDER, exist_ok=True)\n@app.route(\"/\", methods=[\"GET\", \"POST\"])\ndef index():\n    if request.method == \"POST\":\n        files = request.files.getlist(\"pdf_files\")\n        if files:\n            uploaded_files = []",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\nSECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'dev-secret-key')\nDEBUG = False  # Deploy पछि False राख\nALLOWED_HOSTS = ['your-app-name.onrender.com']  # Render URL राख्ने\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'dev-secret-key')\nDEBUG = False  # Deploy पछि False राख\nALLOWED_HOSTS = ['your-app-name.onrender.com']  # Render URL राख्ने\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "DEBUG = False  # Deploy पछि False राख\nALLOWED_HOSTS = ['your-app-name.onrender.com']  # Render URL राख्ने\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    # यहाँ आफ्नो apps add गर",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "ALLOWED_HOSTS = ['your-app-name.onrender.com']  # Render URL राख्ने\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    # यहाँ आफ्नो apps add गर\n]",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    # यहाँ आफ्नो apps add गर\n]\nMIDDLEWARE = [",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'QuickPDF_QR.urls'",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "ROOT_URLCONF = 'QuickPDF_QR.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "WSGI_APPLICATION = 'QuickPDF_QR.wsgi.application'\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\nAUTH_PASSWORD_VALIDATORS = [\n    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},\n    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\nAUTH_PASSWORD_VALIDATORS = [\n    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},\n    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},\n    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},\n    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},\n    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},\n    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},\n]\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\nSTATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # Render static collect गर्न\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\nSTATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # Render static collect गर्न\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\nSTATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # Render static collect गर्न\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "USE_TZ = True\nSTATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # Render static collect गर्न\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "STATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # Render static collect गर्न\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # Render static collect गर्न\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "settings",
        "documentation": {}
    }
]